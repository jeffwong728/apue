cmake_minimum_required(VERSION 3.15.3)
set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT_DIR}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "")
project(Test3rdParty)
enable_testing()
set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT Test3rdParty)

set(CMAKE_CXX_STANDARD 17)
add_compile_options("/utf-8")
add_executable(Test3rdParty 3rdparty_unittest.cpp)

add_custom_command(TARGET Test3rdParty POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory $ENV{VCPKG_DIR}/$<$<CONFIG:Debug>:debug/>bin/ $<TARGET_FILE_DIR:Test3rdParty>)

set(Boost_USE_DEBUG_LIBS ON)
set(Boost_USE_RELEASE_LIBS ON)
list(APPEND CMAKE_MODULE_PATH "D:/apue/cmake")
find_package(ZLIB REQUIRED)
find_package(BZip2 REQUIRED)
find_package(GTest CONFIG REQUIRED)
find_package(LibLZMA CONFIG REQUIRED)
find_package(GLUT REQUIRED)
find_package(JPEGTurbo REQUIRED)
find_package(TIFF REQUIRED)
find_package(SZIP CONFIG REQUIRED)
find_package(SIMD REQUIRED)
find_package(TBB CONFIG REQUIRED tbb tbbmalloc)
find_package(ParallelSTL CONFIG REQUIRED)
find_package(unofficial-pixman CONFIG REQUIRED)
find_package(PCRE REQUIRED)
find_package(OpenCL REQUIRED)
find_package(libsigcpp CONFIG REQUIRED)
find_package(PNG REQUIRED)
find_package(libffi CONFIG REQUIRED)
find_package(unofficial-iconv CONFIG REQUIRED)
find_package(Freetype REQUIRED)
find_package(unofficial-fontconfig CONFIG REQUIRED)
find_package(unofficial-gettext CONFIG REQUIRED)
find_package(EXPAT REQUIRED)
find_package(unofficial-cairo CONFIG REQUIRED)
find_package(unofficial-glib CONFIG REQUIRED)
find_package(GSL REQUIRED)
find_package(hdf5 CONFIG REQUIRED)
find_package(Eigen3 CONFIG REQUIRED)
find_package(Boost REQUIRED locale system thread chrono filesystem unit_test_framework)
find_package(GLIBMM REQUIRED)

set(libs)
list(APPEND libs ZLIB::ZLIB BZip2::BZip2 libffi)
list(APPEND libs GTest::gtest GTest::gtest_main)
list(APPEND libs LibLZMA::LibLZMA szip-shared EXPAT::EXPAT)
list(APPEND libs GLUT::GLUT TIFF::TIFF Freetype::Freetype)
list(APPEND libs JPEG::jpeg JPEG::turbo unofficial::fontconfig::fontconfig)
list(APPEND libs SIMD::Simd pstl::ParallelSTL unofficial::gettext::libintl)
list(APPEND libs TBB::tbb TBB::tbbmalloc unofficial::iconv::libiconv unofficial::iconv::libcharset)
list(APPEND libs unofficial::pixman::pixman-1 OpenCL::OpenCL sigc-3.0 PNG::PNG)
list(APPEND libs PCRE::pcre PCRE::pcre16 PCRE::pcre32 PCRE::pcrecpp PCRE::pcreposix)
list(APPEND libs unofficial::cairo::cairo unofficial::cairo::cairo-gobject)
list(APPEND libs unofficial::glib::gio unofficial::glib::glib unofficial::glib::gmodule unofficial::glib::gobject)
list(APPEND libs GSL::gsl GSL::gslcblas Eigen3::Eigen)
list(APPEND libs hdf5::hdf5-shared hdf5::hdf5_hl-shared hdf5::hdf5_cpp-shared)
list(APPEND libs Boost::filesystem Boost::locale GLIBMM::glibmm GLIBMM::giomm)

target_link_libraries(Test3rdParty PRIVATE ${libs})

if(MSVC)
  target_compile_definitions(Test3rdParty PUBLIC _USE_MATH_DEFINES _SILENCE_CXX17_UNCAUGHT_EXCEPTION_DEPRECATION_WARNING _SCL_SECURE_NO_WARNINGS _CRT_SECURE_NO_WARNINGS __NO_VC_CRTDBG__)
endif()

set_target_properties(Test3rdParty PROPERTIES DEBUG_POSTFIX "_debug")
set_target_properties(Test3rdParty PROPERTIES RELWITHDEBINFO_POSTFIX "_relwithdebinfo")
set_target_properties(Test3rdParty PROPERTIES MINSIZEREL_POSTFIX "_minsizerel")

include(GNUInstallDirs)
install(TARGETS Test3rdParty DESTINATION ${CMAKE_INSTALL_BINDIR})

if(MSVC)
    install(FILES $<TARGET_PDB_FILE:Test3rdParty> DESTINATION "${CMAKE_INSTALL_BINDIR}" OPTIONAL)
endif()

include(GoogleTest)
gtest_add_tests(TARGET Test3rdParty TEST_SUFFIX .noArgs TEST_LIST noArgsTests)