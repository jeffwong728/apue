import os
import re
import sys
from collections import namedtuple

def foo():
    pat = re.compile('GEOM.[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}&([0-9]+)')
    m = pat.match('GEOM.1e941a68-3ec5-4b90-9fd5-069b0dd48c87&13678')

DOWN_LINK = [[]]*11
UP_LINK = [[]]*11

DOWN_LINK[0] = []
DOWN_LINK[1] = []
DOWN_LINK[2] = [1, 2, 3, 4, 9]
DOWN_LINK[3] = [1, 2, 3, 4, 9]
DOWN_LINK[4] = [1, 2, 3, 4, 9]
DOWN_LINK[5] = [1, 2, 3, 4, 9]
DOWN_LINK[6] = []
DOWN_LINK[7] = []
DOWN_LINK[8] = []
DOWN_LINK[9] = []
DOWN_LINK[10] = [1, 2, 3, 4, 9]

UP_LINK[0] = []
UP_LINK[1] = []
UP_LINK[2] = []
UP_LINK[3] = []
UP_LINK[4] = []
UP_LINK[5] = [1, 6, 7, 8, 9]
UP_LINK[6] = [1, 6, 7, 8, 9]
UP_LINK[7] = [1, 6, 7, 8, 9]
UP_LINK[8] = [1, 6, 7, 8, 9]
UP_LINK[9] = []
UP_LINK[10] = [1, 6, 7, 8, 9]

if "__main__"==__name__:
    foo()
    for k in vars().items():
        print '{0:15}  ->  {1}'.format(*k)
    aDict = dict(a=2, b=3)
    CODES = [1, 1, 3, 10, 8, 2, 9, 6, 4, 6, 2, 7, 5, 5]
    RD_LIST = [[0, 0, 0]]
    P4 = 1
    P5 = 2
    P3 = 2
    RD_LIST.append([1, 0, 2, 2])
    RD_LIST.append([1, 0, 0, 2])
    for CODE in CODES[2:]:
        P3 += 1

        QI = 0
        if CODE in [1, 9]:
            QI = 2
        elif CODE in [5, 10]:
            QI = 0
        else:
            QI = 1

        RD_LIST.append([CODE, 0, 0, QI])

        if CODE not in [5, 10]:
            RD_LIST[P5][2] = P3
            P5 = P3

        if 5 == CODE:
            if DOWN_LINK[CODE]:
                if RD_LIST[P4][0] in DOWN_LINK[CODE]:
                    RD_LIST[P4][1] = P3
                    if 1==RD_LIST[P4][0] or 9==RD_LIST[P4][0]:
                        RD_LIST[P4][3] -= 1
                        if not RD_LIST[P4][3]:
                            P4 = RD_LIST[P4][2]
                    else:
                        P4 = RD_LIST[P4][2]
            if UP_LINK[CODE]:
                if RD_LIST[P4][0] in UP_LINK[CODE]:
                    RD_LIST[P3][1] = P4
                    if 1==RD_LIST[P4][0] or 9==RD_LIST[P4][0]:
                        RD_LIST[P4][3] -= 1
                        if not RD_LIST[P4][3]:
                            P4 = RD_LIST[P4][2]
                    else:
                        P4 = RD_LIST[P4][2]
        else :
            if UP_LINK[CODE]:
                if RD_LIST[P4][0] in UP_LINK[CODE]:
                    RD_LIST[P3][1] = P4
                    if 1==RD_LIST[P4][0] or 9==RD_LIST[P4][0]:
                        RD_LIST[P4][3] -= 1
                        if not RD_LIST[P4][3]:
                            P4 = RD_LIST[P4][2]
                    else:
                        P4 = RD_LIST[P4][2]

            if DOWN_LINK[CODE]:
                if RD_LIST[P4][0] in DOWN_LINK[CODE]:
                    RD_LIST[P4][1] = P3
                    if 1==RD_LIST[P4][0] or 9==RD_LIST[P4][0]:
                        RD_LIST[P4][3] -= 1
                        if not RD_LIST[P4][3]:
                            P4 = RD_LIST[P4][2]
                    else:
                        P4 = RD_LIST[P4][2]
    for RD_RECORD in RD_LIST[1:]:
        RD_RECORD[3] = 0
        print '{R[0]:<5}  {R[1]:^5} {R[2]:>5}'.format(R=RD_RECORD)

    CODES = []
    for RD_RECORD in RD_LIST[1:]:
        if not RD_RECORD[3]:
            RD_RECORD[3] = 1
            CONTURE = []
            if 1==RD_RECORD[0]:
                CONTURE.append(RD_RECORD[0])
                LINK = RD_RECORD[1]
                while not RD_LIST[LINK][3]:
                    RD_LIST[LINK][3] = 1
                    CONTURE.append(RD_LIST[LINK][0])
                    LINK = RD_LIST[LINK][1]
                CODES.append(CONTURE)
            elif 9==RD_RECORD[0]:
                pass
            else:
                break
    for C in CODES:
        print C